# Generated by Django 3.1.5 on 2021-01-20 12:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scripts', '0003_auto_20210106_1056'),
    ]

    operations = [
        migrations.AlterField(
            model_name='baseparameter',
            name='corresponding_script',
            field=models.ForeignKey(help_text='The Script this Parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='scripts.script'),
        ),
        migrations.AlterField(
            model_name='baseparameter',
            name='name',
            field=models.CharField(help_text='Identifier for a Base Parameter. This is set automatically when synchronizing with a CLAM server.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='baseparameter',
            name='preset',
            field=models.BooleanField(default=False, help_text='Whether or not this Parameter can be set by Users themselves. When this is False, Users will be able to set this Parameter themselves when running Processes. When this is True a value for this parameter should be specified in one of the fields below.'),
        ),
        migrations.AlterField(
            model_name='baseparameter',
            name='type',
            field=models.IntegerField(choices=[(0, 'Boolean'), (1, 'Static'), (2, 'String'), (3, 'Choice'), (4, 'Text'), (5, 'Integer'), (6, 'Float')], help_text='Indicates what the type is of this Parameter. When specifying a preset you should enter the value of the Parameter within the right typed field below.'),
        ),
        migrations.AlterField(
            model_name='booleanparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='booleanparameter',
            name='value',
            field=models.BooleanField(blank=True, default=False, help_text='The boolean value for this parameter.', null=True),
        ),
        migrations.AlterField(
            model_name='choice',
            name='corresponding_choice_parameter',
            field=models.ForeignKey(help_text='The Choice parameter the Choice belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.choiceparameter'),
        ),
        migrations.AlterField(
            model_name='choice',
            name='value',
            field=models.CharField(help_text='The value of a choice.', max_length=2048),
        ),
        migrations.AlterField(
            model_name='choiceparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='choiceparameter',
            name='value',
            field=models.ForeignKey(blank=True, help_text='The choice value for this parameter.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='scripts.choice'),
        ),
        migrations.AlterField(
            model_name='floatparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='floatparameter',
            name='value',
            field=models.FloatField(blank=True, help_text='The float value for this parameter.', null=True),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='accept_archive',
            field=models.BooleanField(help_text='Whether or not this Input template accepts archives.'),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='corresponding_profile',
            field=models.ForeignKey(help_text='The Profile associated with this Input template.', on_delete=django.db.models.deletion.CASCADE, related_name='input_templates', to='scripts.profile'),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='extension',
            field=models.CharField(help_text='The preferred extension a file should have when it is selected to be used for this Input template.', max_length=32),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='format',
            field=models.CharField(help_text='CLAM format as mirrored from the CLAM server.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='label',
            field=models.CharField(help_text='Label used for describing what files to select for this Input template', max_length=1024),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='mime',
            field=models.CharField(default='text/plain', help_text='The mime class used for files selected for this Input template.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='optional',
            field=models.BooleanField(help_text='Whether or not this Input template is optional.'),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='template_id',
            field=models.CharField(help_text='Template ID as mirrored from the CLAM server.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='unique',
            field=models.BooleanField(help_text='Whether or not multiple files could be uploaded for this Input template.'),
        ),
        migrations.AlterField(
            model_name='integerparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='integerparameter',
            name='value',
            field=models.IntegerField(blank=True, help_text='The integer value for this parameter.', null=True),
        ),
        migrations.AlterField(
            model_name='outputtemplate',
            name='name',
            field=models.CharField(help_text='A name used for identification of an Output template.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='outputtemplate',
            name='regex',
            field=models.CharField(help_text='The regular expression to use when matching output file names of processes. Matching output files will be copied over to the Project directory.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='outputtemplate',
            name='script',
            field=models.ForeignKey(help_text='The Script corresponding to this Output template.', on_delete=django.db.models.deletion.CASCADE, to='scripts.script'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='script',
            field=models.ForeignKey(help_text='The Script this Profile belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='scripts.script'),
        ),
        migrations.AlterField(
            model_name='script',
            name='description',
            field=models.TextField(blank=True, help_text='The description of this Script.', max_length=32768),
        ),
        migrations.AlterField(
            model_name='script',
            name='hostname',
            field=models.URLField(help_text='The full URL where the CLAM server for this Script is accessible.'),
        ),
        migrations.AlterField(
            model_name='script',
            name='name',
            field=models.CharField(help_text='The name of the script, used for identification only.', max_length=512),
        ),
        migrations.AlterField(
            model_name='script',
            name='password',
            field=models.CharField(blank=True, help_text='If the CLAM server requires authentication, enter the password for the authentication here.', max_length=200),
        ),
        migrations.AlterField(
            model_name='script',
            name='username',
            field=models.CharField(blank=True, help_text='If the CLAM server requires authentication, enter the username for the authentication here.', max_length=200),
        ),
        migrations.AlterField(
            model_name='staticparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='staticparameter',
            name='value',
            field=models.CharField(blank=True, help_text='The static value for this parameter.', max_length=2048, null=True),
        ),
        migrations.AlterField(
            model_name='stringparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='stringparameter',
            name='value',
            field=models.CharField(blank=True, help_text='The string value for this parameter.', max_length=2048, null=True),
        ),
        migrations.AlterField(
            model_name='textparameter',
            name='base',
            field=models.OneToOneField(help_text='The Base parameter this typed parameter belongs to.', on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
        ),
        migrations.AlterField(
            model_name='textparameter',
            name='value',
            field=models.TextField(blank=True, help_text='The text value for this parameter.', null=True),
        ),
    ]
