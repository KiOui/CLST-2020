# Generated by Django 3.1.4 on 2021-01-06 08:53

from django.db import migrations, models
import django.db.models.deletion

def remove_all_parameters(apps, schema_editor):
    BaseParameter = apps.get_model("scripts", "BaseParameter")
    BaseParameter.objects.all().delete()
    BooleanParameter = apps.get_model("scripts", "BooleanParameter")
    BooleanParameter.objects.all().delete()
    StaticParameter = apps.get_model("scripts", "StaticParameter")
    StaticParameter.objects.all().delete()
    StringParameter = apps.get_model("scripts", "StringParameter")
    StringParameter.objects.all().delete()
    Choice = apps.get_model("scripts", "Choice")
    Choice.objects.all().delete()
    ChoiceParameter = apps.get_model("scripts", "ChoiceParameter")
    ChoiceParameter.objects.all().delete()
    TextParameter = apps.get_model("scripts", "TextParameter")
    TextParameter.objects.all().delete()
    IntegerParameter = apps.get_model("scripts", "IntegerParameter")
    IntegerParameter.objects.all().delete()
    FloatParameter = apps.get_model("scripts", "FloatParameter")
    FloatParameter.objects.all().delete()
    InputTemplate = apps.get_model("scripts", "InputTemplate")
    InputTemplate.objects.all().delete()
    Profile = apps.get_model("scripts", "Profile")
    Profile.objects.all().delete()



class Migration(migrations.Migration):

    dependencies = [
        ('scripts', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(remove_all_parameters),
        migrations.CreateModel(
            name='OutputTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('regex', models.CharField(max_length=1024)),
                ('script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scripts.script')),
            ],
        ),
        migrations.RemoveField(
            model_name='pipeline',
            name='fa_script',
        ),
        migrations.RemoveField(
            model_name='pipeline',
            name='g2p_script',
        ),
        migrations.RemoveField(
            model_name='process',
            name='script',
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='project',
            name='current_process',
        ),
        migrations.RemoveField(
            model_name='project',
            name='pipeline',
        ),
        migrations.RemoveField(
            model_name='project',
            name='user',
        ),
        migrations.AlterField(
            model_name='baseparameter',
            name='corresponding_script',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='scripts.script'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='booleanparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='choice',
            name='corresponding_choice_parameter',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.choiceparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='choiceparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='floatparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='inputtemplate',
            name='corresponding_profile',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='input_templates', to='scripts.profile'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='integerparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='profile',
            name='script',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='scripts.script'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='staticparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='stringparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='textparameter',
            name='base',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='scripts.baseparameter'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='baseparameter',
            unique_together={('name', 'corresponding_script')},
        ),
        migrations.DeleteModel(
            name='LogMessage',
        ),
        migrations.DeleteModel(
            name='Pipeline',
        ),
        migrations.DeleteModel(
            name='Process',
        ),
        migrations.DeleteModel(
            name='Project',
        ),
    ]
