---

name: "Coding style and testing"
on: "pull_request"

jobs:
  lint_and_test:
    name: "Linting and testing"
    runs-on: "ubuntu-latest"
    steps:

    - name: "Checkout the repository"
      uses: "actions/checkout@v1"

    - name: "Setup Python"
      uses: "actions/setup-python@v1"
      with:
        python-version: '3.7'

    # We now use another predifend action to install poetry. This works easily with caching.
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2
        
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
          path: ~/.cache/pypoetry/
          key: IdontLikeKeyspoetry-${{ hashFiles('**/poetry.lock') }}
          
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'
        
    - name: "Run Black"
      run: "poetry run black --check equestria"

    - name: "Run PyDocStyle"
      run: "poetry run pydocstyle --explain --add-ignore=D100,D104 --match-dir='(?!migrations).*' equestria"

    - name: "Check for dead code"
      run: "poetry run vulture --min-confidence=90 equestria"
      
    - name: Check server
      run: |
        poetry run python3 equestria/manage.py check

    - name: Perform tests
      run: |
        poetry run equestria/testing/scallop.py &
        MOZ_HEADLESS=1 poetry run python3 equestria/manage.py test equestria
        kill $(jobs -p) || true
